from ctypes import c_int as _int, pointer as _ptr
from typing import overload, TypeVar


_CData = _int.__bases__[0].__bases__[0]  # _ctypes._CData

_T = TypeVar("_T", bound=_CData)
_Np = TypeVar("_Np", bound=object)  # Namespace coverage
_FieldMapping = list[tuple[str, type[_CData]]]
_WinPtrType = type[_ptr]  # return type of ctypes.POINTER()


# TYPE_INFO keys:
PY_OBJECT: str = ...
C_SHORT: str = ...
C_USHORT: str = ...
C_LONG: str = ...
C_ULONG: str = ...
C_INT: str = ...
C_UINT: str = ...
C_FLOAT: str = ...
C_DOUBLE: str = ...
C_LONGDOUBLE: str = ...
C_LONGLONG: str = ...
C_ULONGLONG: str = ...
C_BYTE: str = ...
C_UBYTE: str = ...
C_CHAR: str = ...
C_CHAR_PTR: str = ...
C_VOID_PTR: str = ...
C_BOOL: str = ...
C_WCHAR: str = ...
C_WCHAR_PTR: str = ...


# TYPE_INFO:
TYPE_INFO: dict[str, tuple[int, str]] = ...


# standard C types:

class CObject(object):
    __tprepr__: str = ...
    __tpid__: str = ...
    __tpsize__: int = ...
    __tporigin__: type[_CData] = ...
    __typename__: str = ...

    __ctype_be__: type[_CData] = None
    __ctype_le__: type[_CData] = None

    __slots__ = ["__origin__"]

    def __init_subclass__(cls, **kwargs): ...

    @overload
    def __init__(self, value: _CData): ...

    @overload
    def __init__(self, value: _T): ...

    def __repr__(self): ...

    @property
    def value(self): ...

    @value.setter
    def value(self, value): ...

    @property
    def CData(self): ...


class CStruct(CObject):
    __fields__: _FieldMapping = ...
    __tporigin__: type[_CData] = ...

    def __new__(cls, *args, **kwargs): ...

    def __init__(self, *args, **kwargs): ...

    def __repr__(self): ...

    def __getattr__(self, item): ...


class PyObject(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...

    def __repr__(self): ...


class CShort(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CUShort(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CLong(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CULong(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CInt(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CUInt(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CFloat(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CDouble(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CLongDouble(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CLongLong(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CULongLong(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CByte(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CUByte(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CChar(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...

    __ctype_le__ = ...
    __ctype_be__ = ...

    def __class_getitem__(cls, sz: int) -> type[_CData]: ...


class CCharPtr(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...

    def lookup(self) -> str: ...


class CVoidPtr(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...

    def lookup(self) -> _CData: ...


class CBool(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CWchar(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...


class CWcharPtr(CObject):
    __typename__: str = ...
    __tprepr__: str = ...
    __tporigin__: type[_CData] = ...

    def lookup(self) -> str: ...


# namespace for 'Windows.h' types:

class win32(_Np):

    class BYTE(CByte):
        __tprepr__: str = ...

    class WORD(CUShort):
        __tprepr__: str = ...

    class DWORD(CULong):
        __tprepr__: str = ...

    class CHAR(CChar):
        __tprepr__: str = ...

    class WCHAR(CWchar):
        __tprepr__: str = ...

    class INT(CInt):
        __tprepr__: str = ...

    class UINT(CUInt):
        __tprepr__: str = ...

    class DOUBLE(CDouble):
        __tprepr__: str = ...

    class FLOAT(CFloat):
        __tprepr__: str = ...

    class BOOLEAN(BYTE):
        __tprepr__: str = ...

    class BOOL(CLong):
        __tprepr__: str = ...

    class VARIANT_BOOL(CObject):
        __typename__: str = ...
        __tprepr__: str = ...

    class ULONG(CULong):
        __tprepr__: str = ...

    class LONG(CLong):
        __tprepr__: str = ...

    class USHORT(CUShort):
        __tprepr__: str = ...

    class SHORT(CShort):
        __tprepr__: str = ...

    class WPARAM(CObject):
        __tprepr__: str = ...

    class LPARAM(CObject):
        __tprepr__: str = ...

    class ATOM(WORD):
        __tprepr__: str = ...

    class LANGID(WORD):
        __tprepr__: str = ...

    class COLORREF(DWORD):
        __tprepr__: str = ...

    class LGRPID(DWORD):
        __tprepr__: str = ...

    class LCTYPE(DWORD):
        __tprepr__: str = ...

    class LCID(DWORD):
        __tprepr__: str = ...

    class HANDLE(CVoidPtr):
        __tprepr__: str = ...

    class HACCEL(HANDLE):
        __tprepr__: str = ...

    class HBITMAP(HANDLE):
        __tprepr__: str = ...

    class HBRUSH(HANDLE):
        __tprepr__: str = ...

    class HCOLORSPACE(HANDLE):
        __tprepr__: str = ...

    class HDC(HANDLE):
        __tprepr__: str = ...

    class HDESK(HANDLE):
        __tprepr__: str = ...

    class HDWP(HANDLE):
        __tprepr__: str = ...

    class HENHMETAFILE(HANDLE):
        __tprepr__: str = ...

    class HFONT(HANDLE):
        __tprepr__: str = ...

    class HGDIOBJ(HANDLE):
        __tprepr__: str = ...

    class HGLOBAL(HANDLE):
        __tprepr__: str = ...

    class HHOOK(HANDLE):
        __tprepr__: str = ...

    class HICON(HANDLE):
        __tprepr__: str = ...

    class HINSTANCE(HANDLE):
        __tprepr__: str = ...

    class HKEY(HANDLE):
        __tprepr__: str = ...

    class HKL(HANDLE):
        __tprepr__: str = ...

    class HLOCAL(HANDLE):
        __tprepr__: str = ...

    class HMENU(HANDLE):
        __tprepr__: str = ...

    class HMETAFILE(HANDLE):
        __tprepr__: str = ...

    class HMODULE(HANDLE):
        __tprepr__: str = ...

    class HMONITOR(HANDLE):
        __tprepr__: str = ...

    class HPALETTE(HANDLE):
        __tprepr__: str = ...

    class HPEN(HANDLE):
        __tprepr__: str = ...

    class HRGN(HANDLE):
        __tprepr__: str = ...

    class HRSRC(HANDLE):
        __tprepr__: str = ...

    class HSTR(HANDLE):
        __tprepr__: str = ...

    class HTASK(HANDLE):
        __tprepr__: str = ...

    class HWINSTA(HANDLE):
        __tprepr__: str = ...

    class HWND(HANDLE):
        __tprepr__: str = ...

    class SC_HANDLE(HANDLE):
        __tprepr__: str = ...

    class SERVICE_STATUS_HANDLE(HANDLE):
        __tprepr__: str = ...

    class LARGE_INTEGER(CLongLong):
        __tprepr__: str = ...

    class ULARGE_INTEGER(CULongLong):
        __tprepr__: str = ...

    # structs:

    class RECT(CStruct):
        __fields__: _FieldMapping = ...
        __tprepr__: str = ...

    class RECTL(CStruct):
        __fields__: _FieldMapping = ...
        __tprepr__: str = ...

    class SMALL_RECT(CStruct):
        __fields__: _FieldMapping = ...
        __tprepr__: str = ...

    class _COORD(CStruct):
        __fields__: _FieldMapping = ...
        __tprepr__: str = ...

    class POINT(CStruct):
        __fields__: _FieldMapping = ...
        __tprepr__: str = ...

    class POINTL(CStruct):
        __fields__: _FieldMapping = ...
        __tprepr__: str = ...

    class SIZE(CStruct):
        __fields__: _FieldMapping = ...
        __tprepr__: str = ...

    class SIZEL(CStruct):
        __fields__: _FieldMapping = ...
        __tprepr__: str = ...

    class FILETIME(CStruct):
        __fields__: _FieldMapping = ...
        __tprepr__: str = ...

    class MSG(CStruct):
        __fields__: _FieldMapping = ...
        __tprepr__: str = ...

    class WIN32_FIND_DATAA(CStruct):
        __fields__: _FieldMapping = ...
        __tprepr__: str = ...

    class WIN32_FIND_DATAW(CStruct):
        __fields__: _FieldMapping = ...
        __tprepr__: str = ...


    LPBOOL: _WinPtrType = ...
    PBOOL: _WinPtrType = ...
    PBOOLEAN: _WinPtrType = ...
    LPBYTE: _WinPtrType = ...
    PBYTE: _WinPtrType = ...
    PCHAR: _WinPtrType = ...
    LPCOLORREF: _WinPtrType = ...
    LPDWORD: _WinPtrType = ...
    PDWORD: _WinPtrType = ...
    LPFILETIME: _WinPtrType = ...
    PFILETIME: _WinPtrType = ...
    PFLOAT: _WinPtrType = ...
    LPHANDLE: _WinPtrType = ...
    PHANDLE: _WinPtrType = ...
    PHKEY: _WinPtrType = ...
    LPHKL: _WinPtrType = ...
    LPINT: _WinPtrType = ...
    PINT: _WinPtrType = ...
    PLARGE_INTEGER: _WinPtrType = ...
    PLCID: _WinPtrType = ...
    LPLONG: _WinPtrType = ...
    PLONG: _WinPtrType = ...
    LPMSG: _WinPtrType = ...
    PMSG: _WinPtrType = ...
    LPPOINT: _WinPtrType = ...
    PPOINT: _WinPtrType = ...
    PPOINTL: _WinPtrType = ...
    LPRECT: _WinPtrType = ...
    PRECT: _WinPtrType = ...
    LPRECTL: _WinPtrType = ...
    PRECTL: _WinPtrType = ...
    LPSC_HANDLE: _WinPtrType = ...
    PSHORT: _WinPtrType = ...
    LPSIZE: _WinPtrType = ...
    PSIZE: _WinPtrType = ...
    LPSIZEL: _WinPtrType = ...
    PSIZEL: _WinPtrType = ...
    PSMALL_RECT: _WinPtrType = ...
    LPUINT: _WinPtrType = ...
    PUINT: _WinPtrType = ...
    PULARGE_INTEGER: _WinPtrType = ...
    PULONG: _WinPtrType = ...
    PUSHORT: _WinPtrType = ...
    PWCHAR: _WinPtrType = ...
    LPWIN32_FIND_DATAA: _WinPtrType = ...
    PWIN32_FIND_DATAA: _WinPtrType = ...
    LPWIN32_FIND_DATAW: _WinPtrType = ...
    PWIN32_FIND_DATAW: _WinPtrType = ...
    LPWORD: _WinPtrType = ...
    PWORD: _WinPtrType = ...

